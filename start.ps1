Write-Host "üöÄ Iniciando Proyecto Puerta Grande - Pipeline de Datos Financieros" -ForegroundColor Green
Write-Host "================================================================" -ForegroundColor Green

# Verificar si Docker est√° instalado
try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° instalado. Por favor instala Docker Desktop primero." -ForegroundColor Red
    exit 1
}

# Verificar si Docker Compose est√° instalado
try {
    docker-compose --version | Out-Null
    Write-Host "‚úÖ Docker Compose encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose no est√° instalado. Por favor instala Docker Compose primero." -ForegroundColor Red
    exit 1
}

# Crear archivo .env si no existe
if (-not (Test-Path ".env")) {
    Write-Host "üìù Creando archivo .env desde env.example..." -ForegroundColor Yellow
    Copy-Item "env.example" ".env"
    Write-Host "‚úÖ Archivo .env creado. Puedes editarlo si necesitas cambiar configuraciones." -ForegroundColor Green
}

# Inicializar Airflow si es la primera vez
if (-not (Test-Path "logs")) {
    Write-Host "üîß Inicializando Airflow..." -ForegroundColor Yellow
    docker-compose --profile init up airflow-init
    Write-Host "‚úÖ Airflow inicializado correctamente." -ForegroundColor Green
}

# Construir las im√°genes
Write-Host "üî® Construyendo im√°genes Docker..." -ForegroundColor Yellow
docker-compose build --no-cache

# Iniciar todos los servicios
Write-Host "üöÄ Iniciando todos los servicios..." -ForegroundColor Yellow
docker-compose up -d

# Esperar un momento para que los servicios se inicien
Write-Host "‚è≥ Esperando que los servicios se inicien..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# Verificar el estado de los servicios
Write-Host "üîç Verificando estado de los servicios..." -ForegroundColor Yellow
docker-compose ps

Write-Host ""
Write-Host "üéâ ¬°Proyecto iniciado correctamente!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä Servicios disponibles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend: http://localhost:3000" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend API: http://localhost:8000" -ForegroundColor White
Write-Host "   ‚Ä¢ Airflow UI: http://localhost:8080 (usuario: airflow, contrase√±a: airflow)" -ForegroundColor White
Write-Host "   ‚Ä¢ PostgreSQL: localhost:5432" -ForegroundColor White
Write-Host "   ‚Ä¢ Redis: localhost:6379" -ForegroundColor White
Write-Host ""
Write-Host "üìã Comandos √∫tiles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Ver logs: docker-compose logs -f" -ForegroundColor White
Write-Host "   ‚Ä¢ Detener servicios: docker-compose down" -ForegroundColor White
Write-Host "   ‚Ä¢ Reiniciar servicios: docker-compose restart" -ForegroundColor White
Write-Host "   ‚Ä¢ Ver estado: docker-compose ps" -ForegroundColor White
Write-Host ""
Write-Host "üîß Para desarrollo:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Los cambios en el c√≥digo se reflejan autom√°ticamente" -ForegroundColor White
Write-Host "   ‚Ä¢ Los logs se pueden ver con: docker-compose logs -f [servicio]" -ForegroundColor White
Write-Host "" 